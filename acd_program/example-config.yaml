# Homeserver details
homeserver:
    # The address that this appservice can use to connect to the homeserver.
    address: http://synapse:8008
    # The domain of the homeserver (for MXIDs, etc).
    domain: dominio_cliente.com
    # Whether or not to verify the SSL certificate of the homeserver.
    # Only applies if address starts with https://
    verify_ssl: true
    asmux: false
    # Number of retries for all HTTP requests if the homeserver isn't reachable.
    http_retry_count: 4

# Application service host/registration related details
# Changing these values requires regeneration of the registration.
appservice:
    # The address that the homeserver can use to connect to this appservice.
    address: http://nombrecliente-mapi:29666
    # When using https:// the TLS certificate and key files for the address.
    tls_cert: false
    tls_key: false

    # The hostname and port where this appservice should listen.
    hostname: 0.0.0.0
    port: 29666
    # The maximum body size of appservice API requests (from the homeserver) in mebibytes
    # Usually 1 is enough, but on high-traffic bridges you might need to increase this to avoid 413s
    max_body_size: 1

    # The full URI to the database. Only Postgres is currently supported.
    database: postgres://synapse:onokisoft@postgres/mapi_db
    # Additional arguments for asyncpg.create_pool()
    # https://magicstack.github.io/asyncpg/current/api/index.html#asyncpg.pool.create_pool
    database_opts:
        min_size: 5
        max_size: 10

    # The unique ID of this appservice.
    id: ik_mapi
    # bot_displayname: AppService bridge bot
    # bot_avatar: mxc://maunium.net/JxjlbZUlCPULEeHZSwleUXQv
    community_id: false
    # Authentication tokens for AS <-> HS communication. Autogenerated; do not modify.
    as_token: "This value is generated when generating the registration"
    hs_token: "This value is generated when generating the registration"
    # Primary user of the appservice
    bot_username: mapibot

# Bridge config
bridge:
    # Localpart template of MXIDs for AppService users.
    # {userid} is replaced with the user ID of the AppService user.
    command_prefix: "!acd"
    username_template: "ik_{userid}"
    periodic_reconnect:
        # Interval in seconds in which to automatically reconnect all users.
        # This can be used to automatically mitigate the bug where AppService stops sending messages.
        # Set to -1 to disable periodic reconnections entirely.
        interval: -1
        # Whether or not the bridge should backfill chats when reconnecting.
        resync: true
        # Should even disconnected users be reconnected?
        always: false
    # Used by things like mautrix-manager (https://github.com/tulir/mautrix-manager).
    provisioning:
        # Whether or not the provisioning API should be enabled.
        enabled: true
        # The prefix to use in the provisioning API endpoints.
        prefix: /v1
        # The shared secret to authorize users of the API.
        # Set to "generate" to generate and save a new token.
        shared_secret: generate
    # Bridge bot user id
    bot_user_id: "@mx_whatsappbot:dominio_cliente.com"
    # Bridge prefix
    prefix: "!wa"
    sync_with_custom_puppets: true
    # Notice messages
    notices:
        logged_in: "You're already logged in"
        logged_out: "Logged out successfully."
        not_logged_in: "You're not logged in."
        # Toca agregar este notice porque Tulir no le puso ap√≥strofe a este notice :'v
        not_logged_in_2: "You are not logged in"
        external_loggged_out: "You were logged out from another device. Please link the bridge to your phone again."
        # When a chat was successfully created
        created_portal_room: "^Created portal room with \\+(?P<phone_number>[0-9]+) and invited you to it.$"
        # When a chat already exists
        existing_portal: "^You already have a private chat portal with \\+(?P<phone_number>[0-9]+) at .+(?P<room_id>!\\w+:[\\w.-]+).+$"
        # When I can't create a chat with WhatsApp
        phone_is_not_on_whatsapp: "^The server said \\+(?P<phone_number>[0-9]+) is not on WhatsApp$"
    # Bridge commands
    commands:
        login: "login"
        logout: "logout"
        create_room: "pm"
        set_permissions: set-pl {mxid} {power_level}
        delete-session: "delete-session"

    # Users we will invite to the rooms to be created
    invitees_to_rooms:
        - "@admin_mapi:dominio_cliente.com"
        - "@mx_whatsappbot:dominio_cliente.com"

utils:
    # QR response timeout
    wait_promise_time: 10
    # regex to email match
    regex_email: "^[(a-z0-9\\_\\-\\.)]+@[(a-z0-9\\_\\-\\.)]+\\.[(a-z)]{2,15}$"
    # Regex to extract user phone number from matrix user ID
    username_regex: "^@(?P<user_prefix>.+)_(?P<number>[0-9]{8,}):.+$"


logging:
    version: 1
    formatters:
        normal:
            format: "[%(asctime)s] [%(levelname)s@%(name)s] %(message)s"
    handlers:
        file:
            class: logging.handlers.RotatingFileHandler
            formatter: normal
            filename: ./mapi-appservice.log
            maxBytes: 10485760
            backupCount: 10
        console:
            class: logging.StreamHandler
            formatter: normal
    loggers:
        mau:
            level: DEBUG
        aiohttp:
            level: INFO
    root:
        level: DEBUG
        handlers: [file, console]
