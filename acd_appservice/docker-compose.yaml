version: "3.9"

# CORRER ESTE COMANDO ANTES DE HACER EL up -d ::: docker-compose run --rm -e SYNAPSE_SERVER_NAME=darknet -e SYNAPSE_REPORT_STATS=no synapse generate

# Generar el registration del acd :: docker-compose run --rm  -v $(pwd):/data acd-as

# Generar el registration de whatsapp :: docker-compose run --rm  -v $(pwd):/data whatsapp

# Generar el registration de instagram :: docker-compose run --rm  -v $(pwd):/data instagram

# Generar el registration de gupshup :: docker-compose run --rm  -v $(pwd):/data gupshup

# Agregar los siguientes campos en homeserver.yaml:
# database:
#   name: psycopg2
#   args:
#     database: synapse
#     user: synapse
#     password: onokisoft
#     host: postgres


# PARA CREAR LA DB DE LOS SERVICIOS:
# docker exec -it acd-appservice_postgres_1 psql -U synapse -c 'CREATE DATABASE gupshup ENCODING 'UTF8' LC_COLLATE='C' LC_CTYPE='C' template=template0 OWNER synapse;'
# docker exec -it acd-appservice_postgres_1 psql -U synapse -c 'CREATE DATABASE whatsapp ENCODING 'UTF8' LC_COLLATE='C' LC_CTYPE='C' template=template0 OWNER synapse;'
# docker exec -it acd-appservice_postgres_1 psql -U synapse -c 'CREATE DATABASE instagram ENCODING 'UTF8' LC_COLLATE='C' LC_CTYPE='C' template=template0 OWNER synapse;'
# docker exec -it acd-appservice_postgres_1 psql -U synapse -c 'CREATE DATABASE acd_db ENCODING 'UTF8' LC_COLLATE='C' LC_CTYPE='C' template=template0 OWNER synapse;'

# Crear los usario:
# docker exec -it acd-appservice_synapse_1 register_new_matrix_user -u acd -a -p onokisoft -c /data/homeserver.yaml http://localhost:8008
# docker exec -it acd-appservice_synapse_1 register_new_matrix_user -u admin -a -p onokisoft -c /data/homeserver.yaml http://localhost:8008
# docker exec -it acd-appservice_synapse_1 register_new_matrix_user -u supervisor1 -a -p onokisoft -c /data/homeserver.yaml http://localhost:8008
# docker exec -it acd-appservice_synapse_1 register_new_matrix_user -u menubot1 -p onokisoft -c /data/homeserver.yaml http://localhost:8008
# docker exec -it acd-appservice_synapse_1 register_new_matrix_user -u agent1 -p onokisoft -c /data/homeserver.yaml http://localhost:8008
# docker exec -it acd-appservice_synapse_1 register_new_matrix_user -u agent2 -p onokisoft -c /data/homeserver.yaml http://localhost:8008
# docker exec -it acd-appservice_synapse_1 register_new_matrix_user -u agent3 -p onokisoft -c /data/homeserver.yaml http://localhost:8008

# Configure los config de los bridges
# Ahora genere los registration

# Generar el registration del acd :: docker-compose run --rm  -v $(pwd):/data acd-as

# Generar el registration de whatsapp :: docker-compose run --rm  -v $(pwd):/data whatsapp

# Generar el registration de instagram :: docker-compose run --rm  -v $(pwd):/data instagram

# Generar el registration de gupshup :: docker-compose run --rm  -v $(pwd):/data gupshup

# Copie los registration al synapse
# sudo cp acd/registration.yaml synapse/registration-acd.yaml
# sudo cp instagram/registration.yaml synapse/registration-ig.yaml
# sudo cp whatsapp/registration.yaml synapse/registration-wa.yaml
# sudo cp gupshup/registration.yaml synapse/registration-gs.yaml

# Agregue esto al homserver.yaml
# app_service_config_files:
#  - /data/registration-wa.yaml
#  - /data/registration-ig.yaml
#  - /data/registration-gs.yaml
#  - /data/registration-acd.yaml


# Si sale el error PermissionError: [Errno 13] Permission denied: '/opt/docker-run.sh' usar ::: sudo chmod 755 menu-bot/docker-run.sh

services:
  synapse:
    image: matrixdotorg/synapse:v1.67.0
    user: "1000:1000"
    environment:
      - SYNAPSE_CONFIG_PATH=/data/homeserver.yaml
    volumes:
      - ./dev/synapse:/data/
    depends_on:
      - postgres
    ports:
      - 8008:8008

  acd-as:
    image: ikonoim/acd-appservice:testing
    build: .
    restart: unless-stopped
    volumes:
      - .:/opt/acd-appservice
      - ./dev/acd:/data
    depends_on:
      - postgres
      - synapse
    entrypoint: watchmedo auto-restart --recursive --pattern="*.py" --directory="." /opt/acd-appservice/docker-run.sh
    ports:
      - 29601:29601

  menubot:
    image: ikonoim/menubot:stable
    restart: unless-stopped
    volumes:
      - ./dev/menubot/config:/opt/config
      - ./dev/menubot/store:/opt/store
      - ./dev/menubot/logs:/opt/logs

    depends_on:
      - synapse

  whatsapp:
    image: dock.mau.dev/mautrix/whatsapp:v0.7.0
    restart: unless-stopped
    volumes:
      - ./dev/whatsapp:/data
    depends_on:
      - synapse
      - postgres

  instagram:
    image: dock.mau.dev/mautrix/instagram:v0.2.0
    restart: unless-stopped
    volumes:
      - ./dev/instagram:/data
    depends_on:
      - synapse
      - postgres

  gupshup:
    image: bramenn/gupshup-matrix:latest
    restart: unless-stopped
    volumes:
      - ./dev/gupshup:/data
    depends_on:
      - synapse
      - postgres

  postgres:
    image: postgres:10-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: synapse
      POSTGRES_PASSWORD: secretfoo
      POSTGRES_DB: synapse
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - ./dev/schemas:/var/lib/postgresql/data
